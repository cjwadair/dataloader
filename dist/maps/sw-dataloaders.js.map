{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/sw-dataloaders.js","src/utils/dataloader-cache-expiration.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","dataloaders","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","setStorageInstances","params","storageInstances","console","log","handleFetchEvent","event","swCheckCacheParams","request","url","info","respondWith","swProcessRequest","then","response","catch","error","debug","key","instance","matchingStorageInstance","filter","expression","match","Promise","resolve","reject","requestType","requestHandler","requestMethod","_typeof","formatResponse","warn","init","status","statusText","headers","Content-Type","constructor","Response","text","body","newResponse","swCacheFirst","cacheParams","caches","resp","networkTimeout","timeoutLength","maxAge","setTimeout","networkRequest","swRequestFromNetwork","race","reason","swCacheOnly","swNetworkFirst","timeoutId","backupFromCache","clearTimeout","swNetworkOnly","swFastest","rejected","handleRejection","err","handleData","data","shouldCacheData","arguments","undefined","fetch","get","open","cacheName","cache","method","add","cleanUpCache","navigator","offline","now","Date","idbManager","openDb","db","setTimestampForUrl","expireEntries","maxEntries","urlsToDelete","deletionPromises","map","urlToDelete","delete","all","networkFirst","cacheFirst","fastest","networkOnly","cacheOnly","keys","cacheKeys","indexedDB","DB_PREFIX","DB_VERSION","onupgradeneeded","objectStore","result","createObjectStore","STORE_NAME","keyPath","URL_PROPERTY","createIndex","TIMESTAMP_PROPERTY","unique","onsuccess","onerror","transaction","put","timestamp","oncomplete","onabort","expireOldEntries","maxAgeSeconds","maxAgeMillis","urls","index","openCursor","cursorEvent","cursor","target","itemAge","value","push","continue","expireExtraEntries","countRequest","count","initialCount","oldUrls","extraUrls","concat"],"mappings":"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","file":"../sw-dataloaders.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","\n/* \n\tWORKS INSIDE SERVICE WORKER \n*/\n\nvar idbManager = require('./utils/dataloader-cache-expiration');\n\nvar storageInstances = {};\n\nexport function setStorageInstances(params){\n\tstorageInstances = params;\n\tconsole.log('storageInstances are: ', storageInstances);\n}\n\nexport function handleFetchEvent(event){\n\t\n\t// FIND THE MATCHING cacheParam based on the matching by URL\n\t// let params = swCheckCacheParams(event.request.url, storageInstances);\t\n\tlet params = swCheckCacheParams(event.request.url);\t\t\n\t\n\t// ONLY TRIGGER RESPOND WITH EVENT IF THERE IS A MATCH\n\t// OTHERWISE, ALLOW THE REQUESTING METHOD TO FETCH THE DATA DIRECTLY\n\tif(params){\n\t\tconsole.info('handleFetchRequest starting for: ', event.request.url);\n\t\tevent.respondWith(\n\t\t\tswProcessRequest(event, params)\n\t\t\t\t.then(function(response){\n\t\t\t\t\tconsole.log('handleFetchEvent successfully resolved', event.request.url);\n\t\t\t\t\treturn response;\n\t\t\t\t})\n\t\t\t\t.catch(function(error){\n\t\t\t\t\tconsole.log('handleFetchEvent failed to resolve successfully', error, event.request.url);\n\t\t\t\t\tthrow error;\n\t\t\t\t})\n\t\t);\n\t} else {\n\t\tconsole.debug(`no cache matches found for ${event.request.url}. Proceeding with regular fetch.`);\n\t}\n}\n\n/*\n\tSelects the appropriate routingParams to use by matching to the url regex.\n*/\nfunction swCheckCacheParams(url) {\n\tfor (let key in storageInstances) {\n\t\tlet instance = storageInstances[key];\n\t\tlet matchingStorageInstance = false;\n\t\tinstance.url.filter(function(expression){\n\t\t\tif (typeof expression == 'string') {\n\t\t\t\texpression = '^' + expression + '$';\n\t\t\t} \n\t\t\tif(url.match(expression)){\n\t\t\t\tmatchingStorageInstance = true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t});\n\n\t\tif(matchingStorageInstance) {\n\t\t\t// return the instance if a regex match is found\n\t\t\treturn instance;\n\t\t}\n\t}\n\t// IF MATCH FAILS RETURN NOTHING SO THAT REGULAR FETCH REQUEST CAN PROCEED\n\treturn;\n}\n\nvar requestHandler = {\n  \"networkFirst\": swNetworkFirst,\n  \"cacheFirst\": swCacheFirst,\n  \"fastest\": swFastest,\n  \"networkOnly\": swNetworkOnly,\n  \"cacheOnly\": swCacheOnly\n};\n\nfunction swProcessRequest(event, params) {\n\treturn new Promise(function(resolve, reject) {\n\t\tlet requestType = requestHandler[params.requestMethod];\n\t\trequestType(event, params)\n\t\t\t.then(function(response){\n\t\t\t\t\tif(typeof response != 'object'){\n\t\t\t\t\t\tconsole.info('swProcessRequest is returning a: ', typeof response, event.request.url);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif(response) {\n\t\t\t\t\t\tconsole.info('swProcessRequest resolving: ', response);\n\t\t\t\t\t\treturn resolve(formatResponse(requestType, response));\n\t\t\t\t\t}\n\t\t\t\t\tconsole.warn('swProcessRequest did not resolve. throwing error now', event.request.url);\n\t\t\t\t\tthrow Error;\n\t\t\t}).catch(function(error){\n\t\t\t\tconsole.info('swProcessRequest rejecting', event.request.url);\n\t\t\t\treturn reject(error);\n\t\t\t});\n\t});\n}\n\n/* \n\tChecks if response type is a Response Object or not and \n\tconverts it to a response object if it isn't\n*/\nfunction formatResponse(requestType, response) {\n\tlet init = {\n\t\tstatus: 200,\n\t\tstatusText: \"OK\",\n\t\theaders: {'Content-Type': 'text/plain'}\n\t};\n\n\tif (response.constructor == Response ) {\n\t\tconsole.debug('formatResponse: object is response object', response);\n\t\treturn response;\n\t}\n\n\tconsole.debug(response.text, typeof response, response);\n\treturn response.text().then(function(body){\n\t\tlet newResponse = new Response(body, init);\n\t\treturn newResponse;\n\t});\n}\n\ncaches.keys().then(function(cacheKeys){\n\t\tconsole.log('current caches are: ', cacheKeys);\n});\n\n/*\n\tcacheName is a name string not an object as in other methods\n\tmay not to namespace this into a sub module so that use calls something\n\tlike dataloaders.serviceWorker.cacheFirst instead of swCacheFirst\n*/\nfunction swCacheFirst(event, cacheParams){\n\treturn new Promise(function(resolve, reject) {\n\n\t\tcaches.match(event.request.url).then(function(resp) {\n\t\t\tif(resp){\n\t\t\t\tconsole.info(`${event.request.url} returning from the cache`, resp);\n\t\t\t\treturn resolve(resp);\n\t\t\t} else {\n\t\t\t\tconsole.info('swCacheFirst starting network request', event.request.url);\n\t\t\t\t\n\t\t\t\tvar networkTimeout = new Promise(function(reject){\n\t\t\t\t\tlet timeoutLength = cacheParams.maxAge * 1000 || 2000;\n\t\t\t\t\tsetTimeout(reject, timeoutLength, 'network request failed to respond');\n\t\t\t\t});\n\n\t\t\t\tvar networkRequest = new Promise(function(resolve, reject){\n\t\t\t\t\treturn swRequestFromNetwork(event, cacheParams)\n\t\t\t\t\t\t.then(function(response){\n\t\t\t\t\t\t\tconsole.info(`${event.request.url} returning from the network directly from swRequestFromNetwork`);\n\t\t\t\t\t\t\treturn resolve(response);\n\t\t\t\t\t\t}).catch(function(error){\n\t\t\t\t\t\t\tconsole.info('swCacheFirst: network request error being caught', event.request.url);\n\t\t\t\t\t\t\treturn reject(error);\n\t\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tPromise.race([networkTimeout, networkRequest])\n\t\t\t\t\t.then(function(response){\n\t\t\t\t\t\tconsole.info(`swCacheFirst: ${event.request.url} returning from the network via Promise.race`);\n\t\t\t\t\t\treturn resolve(response);\n\t\t\t\t\t})\n\t\t\t\t\t.catch(function(reason){\n\t\t\t\t\t\tconsole.info('swCacheFirst request rejected because timeout triggered', reason, event.request.url);\n\t\t\t\t\t\treturn reject(reason);\n\t\t\t\t\t});\n\t\t\t}\n\t\t}).catch(function(error){\n\t\t\tconsole.error(\"error in swCacheFirst request\", error, event.request.url);\n\t\t\treject(error);\n\t\t});\n\t});\n}\n\nfunction swCacheOnly(event, cacheParams){//eslint-disable-line\n\treturn new Promise(function(resolve, reject) {\n\t\tcaches.match(event.request)\n\t\t\t.then(function(resp) {\n\t\t\t\tif(resp){\n\t\t\t\t\treturn resolve(resp);\n\t\t\t\t} else {\n\t\t\t\t\treturn reject();\n\t\t\t\t}\n\t\t\t});\n\t});\n}\n\nfunction swNetworkFirst(event, cacheParams) {\n\tlet timeoutId;\n\n\tvar backupFromCache = new Promise(function(resolve, reject){\n\t\ttimeoutId = setTimeout(function(){\n\t\t\tcaches.match(event.request).then(function(response){\n\t\t\t\t\n\t\t\t\tif (response) {\n\t\t\t\t\tconsole.log('returning swNetworkFirst request from the Cache', typeof response, response);\n\t\t\t\t\t// ONLY RESOLVES IF THE CACHE CONTAINS DATA\n\t\t\t\t\t// SO NETWORK RESPONSE DOESN'T TIMEOUT UNLESS THERE IS A BACKUP \n\t\t\t\t\treturn resolve(response);\n\t\t\t\t} else {\n\t\t\t\t\tconsole.warn('no response to resolve to in swNetworkFirst');\n\t\t\t\t\treturn reject();\n\t\t\t\t}\n\t\t\t});\n\t\t}, 1500);\n\t});\n\n\tvar networkRequest = new Promise(function(resolve, reject){\n\n\t\treturn swRequestFromNetwork(event, cacheParams)\n\t\t\t.then(function(response){\n\t\t\t\tif(timeoutId) { clearTimeout(timeoutId); }\n\t\t\t\tconsole.log('returning swNetworkFirst request from the Network', event.request, event.request.url);\n\t\t\t\tcaches.match(event.request).then(function(response){\n\t\t\t\t\tconsole.log('matching cache is:', response);\n\t\t\t\t});\n\t\t\t\tif(response) {\n\t\t\t\t\treturn resolve(response);\n\t\t\t\t}\n\t\t\t\tconsole.warn('swNetworkFirst: Bad Response From networkRequest');\n\t\t\t\treturn reject();\n\t\t\t})\n\t\t\t.catch(function(error){\n\t\t\t\tconsole.log('swNetworkFirst: error returned from requestFromNetwork', error, event.request.url);\n\t\t\t\tif(timeoutId) { clearTimeout(timeoutId); }\n\t\t\t\treturn caches.match(event.request)\n\t\t\t\t\t.then(function(response){\n\t\t\t\t\t\tif (response) {\n\t\t\t\t\t\t\tconsole.log('returning swNetworkFirst request from the Cache', typeof response, response);\n\t\t\t\t\t\t\t// ONLY RESOLVES IF THE CACHE CONTAINS DATA\n\t\t\t\t\t\t\t// SO NETWORK RESPONSE DOESN'T TIMEOUT UNLESS THERE IS A BACKUP \n\t\t\t\t\t\t\treturn resolve(response);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconsole.warn('no response to resolve to in swNetworkFirst');\n\t\t\t\t\t\t\treturn reject();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t});\n\t});\n\n\treturn Promise.race([backupFromCache, networkRequest])\n\t\t.then(function(response){\n\t\t\treturn response;\n\t\t});\n}\n\nfunction swNetworkOnly(event, cacheParams){\n\treturn new Promise(function(resolve, reject){\n\t\t// last parameter set to false indicates that the network only requests should not cache\n\t\t//  the data they get back\n\t\tswRequestFromNetwork(event, cacheParams, false).then(function(response){\n\t\t\tif(response){\n\t\t\t\treturn resolve(response);\n\t\t\t}\n\t\t\tconsole.log('swNetworkOnly Request did not succeed. The response was: ' + response);\n\t\t\treturn resolve;\n\t\t}).catch(function(error){\n\t\t\tconsole.debug('swNetworkOnly request failed');\n\t\t\treject(Error(error));\n\t\t});\n\t});\n}\n\nfunction swFastest(event, cacheParams) {\n\treturn new Promise(function(resolve, reject) {\n\t\tlet rejected = false;\n\t\t\n\t\tvar handleRejection = function(err) {\n\t\t\tif (rejected){\n\t\t\t\treject(Error('both cache and network requests failed'), err);\n\t\t\t} else {\n\t\t\t\tconsole.log('rejected request');\n\t\t\t\trejected = true;\n\t\t\t}\n\t\t};\n\n\t\tvar handleData = function(data) {\n\t\t\tif(data) { \n\t\t\t\treturn resolve(data); \n\t\t\t} else {\n\t\t\t\thandleRejection();\n\t\t\t}\n\t\t};\n\t\t\n\t\tswCacheOnly(event, cacheParams).then(handleData, handleRejection);\n\t\tswRequestFromNetwork(event, cacheParams).then(handleData, handleRejection);\n\t});\n}\n\nfunction swRequestFromNetwork(event, cacheParams, shouldCacheData=true) {\n\treturn new Promise(function(resolve, reject){\n\t\tfetch(event.request)\n\t\t.then(function(response){\n\t\t\tconsole.debug('swRequestFromNetwork: network request responded with: ', event.request.url, response.headers, response.headers.get(\"Content-Type\"));\n\t\t\tcaches.open(cacheParams.cacheName)\n\t\t\t\t.then(function(cache) {\t\t\t\t\t\n\t\t\t\t\tif(shouldCacheData && event.request.method === 'GET'){\t\t\t\t\n\t\t\t\t\t\tcache.add(event.request.url).then(function(){\n\t\t\t\t\t\t\tconsole.debug('swRequestFromNetwork: network item added to cache', event.request.url);\n\t\t\t\t\t\t\tcleanUpCache(cacheParams, cache, event.request.url);\n\t\t\t\t\t\t}).catch(function(error){\n\t\t\t\t\t\t\tconsole.error('swRequestFromNetwork: error when adding item to the cache', event.request.url, error);\n\t\t\t\t\t\t});\t\n\t\t\t\t\t}\n\t\t\t\t\treturn resolve(response);  \n\t\t\t\t});\t\n\t\t\t\t}).catch(function(error){\n\t\t\t\t\tconsole.error('error in swRequestFromNetwork: ', error, event.request.url);\n\t\t\t\t\treturn reject(error);\n\t\t\t\t});\n\t});\n}\n\n/*\n\tcalled from network request. triggers the cache cleanup process to \n\tremove expired entries, manage cache size, etc.\n*/\nfunction cleanUpCache(cacheParams, cache, url){\n\n\tconsole.log('offline status', navigator.offline);\n\n\tlet now = Date.now();\n\tidbManager.openDb(cacheParams.cacheName).then(function(db) {\n    return idbManager.setTimestampForUrl(db, url, now);\n  }).then(function(db) {\n    return idbManager.expireEntries(db, cacheParams.maxEntries, cacheParams.maxAge, now);\n  }).then(function(urlsToDelete) {\n    var deletionPromises = urlsToDelete.map(function(urlToDelete) {\n\t\t\tconsole.log('deleting cache: ', urlToDelete, cacheParams.maxAge);\n      return cache.delete(urlToDelete);\n    });\n    return Promise.all(deletionPromises).then(function() {\n      console.log('Done with cache cleanup.');\n    });\n  }).catch(function(error) {\n    console.log('error in cache clean up: ', error);\n  });\n}\n\n","/*\n  THIS IS FROM THE DATALOADER_CACHE_EXPIRATION FILE\n Copyright 2015 Google Inc. All Rights Reserved.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\n'use strict';\n\n// var DB_PREFIX = 'dl-';\nvar DB_PREFIX = '';\nvar DB_VERSION = 1;\nvar STORE_NAME = 'dataStore';\nvar URL_PROPERTY = 'url';\nvar TIMESTAMP_PROPERTY = 'timestamp';\n// var cacheNameToDbPromise = {};\n\nfunction openDb(cacheName) {\n  return new Promise(function(resolve, reject) {\n    var request = indexedDB.open(DB_PREFIX + cacheName, DB_VERSION);\n\n    request.onupgradeneeded = function() {\n      console.log('onupgradeneeded called');\n      var objectStore = request.result.createObjectStore(STORE_NAME,\n          {keyPath: URL_PROPERTY});\n      objectStore.createIndex(TIMESTAMP_PROPERTY, TIMESTAMP_PROPERTY,\n          {unique: false});\n    };\n\n    request.onsuccess = function() {\n      resolve(request.result);\n    };\n\n    request.onerror = function() {\n      reject(request.error);\n    };\n  });\n}\n\nfunction setTimestampForUrl(db, url, now) {\n  return new Promise(function(resolve, reject) {\n    var transaction = db.transaction(STORE_NAME, 'readwrite');\n    var objectStore = transaction.objectStore(STORE_NAME);\n    objectStore.put({url: url, timestamp: now});\n\n    transaction.oncomplete = function() {\n      resolve(db);\n    };\n\n    transaction.onabort = function() {\n      reject(transaction.error);\n    };\n  });\n}\n\nfunction expireOldEntries(db, maxAgeSeconds, now) {\n  // Bail out early by resolving with an empty array if we're not using\n  // maxAgeSeconds.\n  if (!maxAgeSeconds) {\n    return Promise.resolve([]);\n  }\n\n  return new Promise(function(resolve, reject) {\n    var maxAgeMillis = maxAgeSeconds * 1000;\n    var urls = [];\n\n    var transaction = db.transaction(STORE_NAME, 'readwrite');\n    var objectStore = transaction.objectStore(STORE_NAME);\n    var index = objectStore.index(TIMESTAMP_PROPERTY);\n\n    index.openCursor().onsuccess = function(cursorEvent) {\n      var cursor = cursorEvent.target.result;\n      let itemAge = now - cursor.value[TIMESTAMP_PROPERTY];\n      if (cursor) {\n        if (itemAge > maxAgeMillis) {\n          var url = cursor.value[URL_PROPERTY];\n          urls.push(url);\n          objectStore.delete(url);\n          cursor.continue();\n        }\n      }\n    };\n\n    transaction.oncomplete = function() {\n      resolve(urls);\n    };\n\n    transaction.onabort = reject;\n  });\n}\n\nfunction expireExtraEntries(db, maxEntries) {\n  // Bail out early by resolving with an empty array if we're not using\n  // maxEntries.\n  if (!maxEntries) {\n    return Promise.resolve([]);\n  }\n\n  return new Promise(function(resolve, reject) {\n    var urls = [];\n\n    var transaction = db.transaction(STORE_NAME, 'readwrite');\n    var objectStore = transaction.objectStore(STORE_NAME);\n    var index = objectStore.index(TIMESTAMP_PROPERTY);\n\n    var countRequest = index.count();\n    index.count().onsuccess = function() {\n      var initialCount = countRequest.result;\n\n      if (initialCount > maxEntries) {\n        index.openCursor().onsuccess = function(cursorEvent) {\n          var cursor = cursorEvent.target.result;\n          if (cursor) {\n            var url = cursor.value[URL_PROPERTY];\n            urls.push(url);\n            objectStore.delete(url);\n            if (initialCount - urls.length > maxEntries) {\n              cursor.continue();\n            }\n          }\n        };\n      }\n    };\n\n    transaction.oncomplete = function() {\n      resolve(urls);\n    };\n\n    transaction.onabort = reject;\n  });\n}\n\nfunction expireEntries(db, maxEntries, maxAgeSeconds, now) {\n  return expireOldEntries(db, maxAgeSeconds, now).then(function(oldUrls) {\n    return expireExtraEntries(db, maxEntries).then(function(extraUrls) {\n      return oldUrls.concat(extraUrls);\n    });\n  });\n}\n\nmodule.exports = {\n  openDb: openDb,\n  setTimestampForUrl: setTimestampForUrl,\n  expireEntries: expireEntries\n};\n"]}